---
version: 2.1
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

executors:
  aws: 
    docker:
      - image: amazon/aws-cli
  python:
    docker:
      - image: python:3.9.0-alpine

commands:
  destroy-environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create-infrastructure: 
    executor: aws
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --region us-east-1
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:cd-deployment,Values=ansible-${CIRCLE_WORKFLOW_ID:0:7}" \
              --output text >> inventory
      - persist_to_workspace:
          root: .
          paths:
            - inventory
  # configure-infrastructure:
  #   executor: python
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["34:b8:83:88:95:73:32:a8:45:a2:fd:c0:2d:e5:95:a5"]
  #     - attach_workspace:
  #         at: ~/
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           apk add --update ansible
  #           ansible --version
  #     - run:
  #         name: Configure server
  #         command: |
  #           pwd &&
  #           ls -la
  #           cat inventory
  #           ansible-playbook -i inventory main.yml
  configure-infrastructure:
    executor: python
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["06:55:19:5c:75:9c:0c:fa:5e:f0:ed:c4:2b:35:ec:76"]
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            ansible --version
      - run:
          name: Configure server
          command: |
            pwd &&
            ls -la
            cat inventory
            ansible-playbook -i inventory main.yml
  smoke-test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy-environment 
# Sequential workflow
workflows:
  # Name the workflow
  super_workflow:
    jobs:
      - create-infrastructure
      - configure-infrastructure:
          requires: [create-infrastructure]
      - smoke-test:
          requires: [configure-infrastructure]